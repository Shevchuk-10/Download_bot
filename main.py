import os
import uuid
import shutil
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import yt_dlp
import instaloader

# üîê –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∑ –∑–º—ñ–Ω–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("TOKEN")  # –ü–µ—Ä–µ–≤—ñ—Ä, —â–æ–± —É .env –∞–±–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ –±—É–ª–∞ —Ü—è –∑–º—ñ–Ω–Ω–∞

# üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ YouTube
def download_youtube(url):
    filename = f"{uuid.uuid4()}.mp4"
    ydl_opts = {
        'format': 'best',
        'outtmpl': filename,
        'quiet': True,
        'noplaylist': True,
        'max_filesize': 50 * 1024 * 1024  # 50 MB –ª—ñ–º—ñ—Ç
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])
    return filename

# üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Instagram
def download_instagram(url):
    shortcode = url.rstrip("/").split("/")[-1]
    L = instaloader.Instaloader(download_video_thumbnails=False, quiet=True)
    post = instaloader.Post.from_shortcode(L.context, shortcode)

    temp_dir = "insta_temp"
    os.makedirs(temp_dir, exist_ok=True)
    L.download_post(post, target=temp_dir)

    filename = f"{uuid.uuid4()}.mp4"
    for file in os.listdir(temp_dir):
        if file.endswith(".mp4"):
            os.rename(f"{temp_dir}/{file}", filename)
            break

    shutil.rmtree(temp_dir, ignore_errors=True)
    return filename

# üëã –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑ YouTube –∞–±–æ Instagram, —ñ —è —Å–∫–∞—á–∞—é –π–æ–≥–æ –¥–ª—è —Ç–µ–±–µ üì•"
    )

# üì© –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()

    try:
        if "youtube.com" in url or "youtu.be" in url:
            await update.message.reply_text("üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∑ YouTube...")
            video = download_youtube(url)
        elif "instagram.com" in url:
            await update.message.reply_text("üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∑ Instagram...")
            video = download_instagram(url)
        else:
            await update.message.reply_text("üö´ –ù–µ–≤—ñ–¥–æ–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –ù–∞–¥—ñ—à–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ YouTube –∞–±–æ Instagram.")
            return

        await update.message.reply_video(video=open(video, 'rb'))
        os.remove(video)

    except Exception as e:
        await update.message.reply_text(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤—ñ–¥–µ–æ.\n{str(e)}")

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π. –ß–µ–∫–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
    app.run_polling()
