from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import yt_dlp
import os
import uuid
import instaloader

# üîë –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = '8018034750:AAFbVpJCXAb_c3b5pddHJtYNkcMroxpe97c'  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω

# üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ YouTube
def download_youtube(url):
    filename = f"{uuid.uuid4()}.mp4"
    ydl_opts = {
        'format': 'best',
        'outtmpl': filename,
        'quiet': True
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])
    return filename

# üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Instagram
def download_instagram(url):
    L = instaloader.Instaloader(download_video_thumbnails=False, quiet=True)
    post = instaloader.Post.from_shortcode(L.context, url.split("/")[-2])
    filename = f"{uuid.uuid4()}.mp4"
    L.download_post(post, target='insta_temp')
    for file in os.listdir("insta_temp"):
        if file.endswith('.mp4'):
            os.rename(f"insta_temp/{file}", filename)
            break
    return filename

# üí¨ –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –ø—Ä–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∑ YouTube –∞–±–æ Instagram, —ñ —è —Å–∫–∞—á–∞—é –π–æ–≥–æ –¥–ª—è —Ç–µ–±–µ üì•")

# üì© –û–±—Ä–æ–±–∫–∞ –ø–æ—Å–∏–ª–∞–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text

    if "youtube.com" in url or "youtu.be" in url:
        await update.message.reply_text("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∑ YouTube...")
        video = download_youtube(url)
    elif "instagram.com" in url:
        await update.message.reply_text("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –∑ Instagram...")
        video = download_instagram(url)
    else:
        await update.message.reply_text("–ù–µ–≤—ñ–¥–æ–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑.")
        return

    await update.message.reply_video(video=open(video, 'rb'))
    os.remove(video)

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π. –ß–µ–∫–∞—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
    app.run_polling()
